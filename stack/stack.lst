     1                                  extern printf
     2                                  section .data
     3                                  
     4 00000000 41424344454600          	strng		db		"ABCDEF", 0
     5                                  	strLen		equ		$ - strng -1
     6 00000007 50696572776F746E79-     	fmt1		db		"Pierwotny łańcuch:  %s", 10, 0
     6 00000010 20C58261C584637563-
     6 00000019 683A202025730A00   
     7 00000021 4F647772C3B3636F6E-     	fmt2		db		"Odwrócony łańcuch:  %s", 10, 0
     7 0000002A 7920C58261C5846375-
     7 00000033 63683A202025730A00 
     8                                  
     9                                  section .bss
    10                                  section .text
    11                                  	global	 main
    12                                  
    13                                  main:
    14 00000000 55                      	push	rbp
    15 00000001 4889E5                  	mov		rbp, rsp
    16                                  
    17 00000004 488D3C25[07000000]      	lea		rdi, [fmt1]
    18 0000000C 488D3425[00000000]      	lea		rsi, [strng]
    19 00000014 B800000000              	mov		rax, 0
    20 00000019 E8(00000000)            	call	printf
    21                                  
    22 0000001E 4831C0                  	xor		rax, rax
    23 00000021 488D1C25[00000000]      	lea		rbx, [strng] 	; adres strng
    24 00000029 B906000000              	mov		rcx, strLen		; długość
    25 0000002E 41BC00000000            	mov		r12, 0			; indeks - wskaźnik
    26                                  
    27                                  	pushLoop:
    28 00000034 418A8424[00000000]      		mov		al, byte [strng+r12]
    29 0000003C 50                      		push 	rax
    30 0000003D 49FFC4                  		inc		r12
    31 00000040 E2F2                    		loop	pushLoop
    32                                  
    33                                  	; zdejmujemy łańcuch ze stosu znak po znaku
    34                                  	; Spowoduje odwrócenie pierwotnego łańcucha
    35                                  
    36 00000042 488D1C25[00000000]      	lea		rbx, [strng]
    37 0000004A B906000000              	mov		rcx, strLen
    38 0000004F 41BC00000000            	mov		r12, 0
    39                                  	popLoop:
    40 00000055 58                      		pop 	rax
    41 00000056 42880423                		mov		byte [rbx+r12], al
    42 0000005A 49FFC4                  		inc		r12
    43 0000005D E2F6                    		loop	popLoop
    44                                  
    45 0000005F 42C6042300              		mov		byte [rbx+r12], 0 ; kończymy znak łańcuchem 0 (null \0)
    46                                  
    47 00000064 488D3C25[21000000]      	lea		rdi, [fmt2]
    48 0000006C 488D3425[00000000]      	lea		rsi, [strng]
    49 00000074 B800000000              	mov		rax, 0
    50 00000079 E8(00000000)            	call 	printf
    51                                  
    52 0000007E 4889EC                  	mov		rsp, rbp
    53 00000081 5D                      	pop 	rbp
    54 00000082 C3                      	ret
    55                                  	
