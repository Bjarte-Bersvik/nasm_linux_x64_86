     1                                  ; func_arg_stack.asm
     2                                  extern printf
     3                                  
     4                                  section .data
     5 00000000 7B00000000000000        	n1	dq	123
     6 00000008 DF00000000000000        	n2	dq	223
     7 00000010 1830000000000000        	n3	dq	12312
     8 00000018 AF7E000000000000        	n4	dq	32431
     9 00000020 4101000000000000        	n5  dq	321
    10 00000028 E703000000000000        	n6  dq  999
    11 00000030 3186010000000000        	n7  dq  99889
    12 00000038 5308000000000000        	n8	dq  2131
    13                                  
    14 00000040 50727A656420707274-     	fmt_before	db  "Przed prt", 10, 0
    14 00000049 0A00               
    15 0000004B 416674657220707274-     	fmt_after	db  "After prt", 10, 0
    15 00000054 0A00               
    16                                  	
    17                                  section .bss
    18                                  section .text
    19                                  
    20                                  ;----------
    21                                  prt:
    22                                  	section .data
    23 00000056 417267756D656E7479-     		.fmt	db	"Argumenty przekazane: n1: %d, n2: %d, n3: %d, n4: %d, n5: %d, n6: %d, n7: %d, n8: %d ", 10, 0
    23 0000005F 2070727A656B617A61-
    23 00000068 6E653A206E313A2025-
    23 00000071 642C206E323A202564-
    23 0000007A 2C206E333A2025642C-
    23 00000083 206E343A2025642C20-
    23 0000008C 6E353A2025642C206E-
    23 00000095 363A2025642C206E37-
    23 0000009E 3A2025642C206E383A-
    23 000000A7 202564200A00       
    24                                  	section .text
    25 00000000 55                      		push	rbp
    26 00000001 4889E5                  		mov		rbp, rsp
    27                                  
    28 00000004 4889FB                  		mov		rbx, rdi
    29 00000007 4989F2                  		mov		r10, rsi
    30 0000000A 4989D3                  		mov		r11, rdx
    31 0000000D 4989CC                  		mov		r12, rcx
    32 00000010 4D89C5                  		mov		r13, r8
    33 00000013 4D8B31                  		mov		r14, [r9]
    34                                  
    35 00000016 4C8B7D10                		mov		r15, qword [rbp + 16]
    36 0000001A 488B4518                		mov		rax, qword [rbp + 24]
    37                                  
    38 0000001E 4D8B3F                  		mov		r15, [r15]
    39 00000021 488B00                  		mov		rax, [rax]
    40                                  		
    41 00000024 48BF-                   		mov		rdi, .fmt
    41 00000026 [5600000000000000] 
    42 0000002E 488B33                  		mov		rsi, [rbx]
    43 00000031 498B12                  		mov		rdx, [r10]
    44 00000034 498B0B                  		mov		rcx, [r11]
    45 00000037 4D8B0424                		mov		r8, [r12]
    46 0000003B 4D8B4D00                		mov		r9,	[r13]
    47                                  
    48 0000003F 4883EC20                		sub		rsp, 32
    49                                  
    50 00000043 4C893424                		mov		qword [rsp + 0], r14
    51 00000047 4C897C2408              		mov		qword [rsp + 8], r15
    52 0000004C 4889442410              		mov		qword [rsp + 16], rax
    53 00000051 4831C0                  		xor		rax, rax
    54 00000054 E8(00000000)            		call	printf
    55                                  
    56 00000059 4883C420                		add		rsp, 32
    57                                  		
    58 0000005D C9                      		leave
    59 0000005E C3                      		ret
    60                                  	
    61                                  	global main
    62                                  main:
    63 0000005F 55                      	push	rbp
    64 00000060 4889E5                  	mov		rbp, rsp
    65                                  
    66 00000063 48BF-                   	mov		rdi, fmt_before
    66 00000065 [4000000000000000] 
    67 0000006D B800000000              	mov		rax, 0
    68 00000072 E8(00000000)            	call	printf
    69                                  
    70 00000077 48BF-                   	mov		rdi, n1
    70 00000079 [0000000000000000] 
    71 00000081 48BE-                   	mov		rsi, n2
    71 00000083 [0800000000000000] 
    72 0000008B 48BA-                   	mov		rdx, n3
    72 0000008D [1000000000000000] 
    73 00000095 48B9-                   	mov		rcx, n4
    73 00000097 [1800000000000000] 
    74 0000009F 49B8-                   	mov		r8,  n5
    74 000000A1 [2000000000000000] 
    75 000000A9 49B9-                   	mov		r9,  n6
    75 000000AB [2800000000000000] 
    76                                  
    77 000000B3 4883EC20                	sub		rsp, 32
    78                                  
    79 000000B7 48C70424[30000000]      	mov		qword [rsp + 0], n7
    80 000000BF 48C7442408-             	mov		qword [rsp + 8], n8
    80 000000C4 [38000000]         
    81 000000C8 E833FFFFFF              	call	prt
    82                                  
    83 000000CD 4883C420                	add		rsp, 32
    84                                  
    85 000000D1 48BF-                   	mov		rdi, fmt_after
    85 000000D3 [4B00000000000000] 
    86 000000DB B800000000              	mov		rax, 0
    87 000000E0 E8(00000000)            	call	printf
    88                                  
    89 000000E5 C9                      	leave
    90 000000E6 C3                      	ret
